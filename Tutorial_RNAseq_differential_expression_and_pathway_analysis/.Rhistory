library(DESeq2)
install.packages(ggplot2)
install.packages("ggplot2")
library(ggplot2)
install.packages("devtools")
install.packages("devtools")
library()
install.packages("dplyr")
install.packages("DESeq2")
version()
version
install.packages("DESeq2")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("DESeq2")
version
# Import countdata
countData = read.csv(countDataURL, row.names=1) %>%
dplyr::select(-length) %>%
as.matrix()
countDataURL = "http://files.figshare.com/2600373/GSE37704_sailfish_genecounts.csv"
# Import countdata
countData = read.csv(countDataURL, row.names=1) %>%
dplyr::select(-length) %>%
as.matrix()
# Import countdata
countData = read.csv(countDataURL, row.names=1) %>% dplyr::select(-length) %>% as.matrix()
# Import countdata
countData = read.csv(countDataURL, row.names=1) %>%
dplyr::select(-length) %>%
as.matrix()
library("dplyr")
library("dplyr")
countData
countData
print(countData)
head(countData)
# Import countdata
countData = read.csv(countDataURL, row.names=1) %>%
dplyr::select(-length) %>%
as.matrix()
# Filter data where you only have 0 or 1 read count across all samples.
countData = countData[rowSums(countData)>1, ]
library(DESeq2)
library(DESeq2)
library(DESeq2)
sessionInfo()
library(DESeq2)
browseVignettes("DESeq2")
library(DESeq2)
install.packages("foreing")
remove.packages("DESeq2")
library(DESeq2)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("DESeq2")
library("DESeq2")
install.packages("foreign")
remove.packages("DESeq2")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("DESeq2")
library("DESeq2")
library(dplyr)
install.packages("dplyr")
install.packages("DESeq2")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("DESeq2")
library("DESeq2")
library("DESeq2")
library("dplyr")
library("dplyr")
library(DESeq2)
countDataURL = "http://files.figshare.com/2600373/GSE37704_sailfish_genecounts.csv"
# Import countdata
countData = read.csv(countDataURL, row.names=1) %>%
dplyr::select(-length) %>%
as.matrix()
library(dplyr)
library(DESeq2)
countDataURL = "http://files.figshare.com/2600373/GSE37704_sailfish_genecounts.csv"
# Import countdata
countData = read.csv(countDataURL, row.names=1) %>%
dplyr::select(-length) %>%
as.matrix()
# Filter data where you only have 0 or 1 read count across all samples.
countData = countData[rowSums(countData)>1, ]
head(countData)
countDataURL = "http://files.figshare.com/2600373/GSE37704_sailfish_genecounts.csv"
countData = read.csv(countDataURL, row.names=1)
library(dplyr)
library(DESeq2)
countDataURL = "http://files.figshare.com/2439061/GSE37704_featurecounts.csv"
# Import countdata
countData = read.csv(countDataURL, row.names=1) %>%
dplyr::select(-length) %>%
as.matrix()
# Filter data where you only have 0 or 1 read count across all samples.
countData = countData[rowSums(countData)>1, ]
head(countData)
library(dplyr)
library(DESeq2)
countDataURL = "D:\ProyectosProgramaciÃ³n\GSE37704_featurecounts.CSV"
# Import countdata
countData = read.csv(countDataURL, row.names=1) %>%
dplyr::select(-length) %>%
as.matrix()
# Filter data where you only have 0 or 1 read count across all samples.
countData = countData[rowSums(countData)>1, ]
head(countData)
library(dplyr)
library(DESeq2)
countDataURL = "GSE37704_featurecounts.CSV"
# Import countdata
countData = read.csv(countDataURL, row.names=1) %>%
dplyr::select(-length) %>%
as.matrix()
# Filter data where you only have 0 or 1 read count across all samples.
countData = countData[rowSums(countData)>1, ]
head(countData)
library(dplyr)
library(DESeq2)
countDataURL = "GSE37704_featurecounts.CSV"
# Import countdata
countData = read.csv(countDataURL, row.names=1) %>%
dplyr::select(-length) %>%
as.matrix()
# Filter data where you only have 0 or 1 read count across all samples.
countData = countData[rowSums(countData)>1, ]
head(countData)
library(dplyr)
library(DESeq2)
countDataURL = "/GSE37704_featurecounts.CSV"
# Import countdata
countData = read.csv(countDataURL, row.names=1) %>%
dplyr::select(-length) %>%
as.matrix()
# Filter data where you only have 0 or 1 read count across all samples.
countData = countData[rowSums(countData)>1, ]
head(countData)
library(dplyr)
library(DESeq2)
countDataURL = "d:/ProyectosProgramacion/GSE37704_featurecounts.csv"
# Import countdata
countData = read.csv(countDataURL, row.names=1) %>%
dplyr::select(-length) %>%
as.matrix()
# Filter data where you only have 0 or 1 read count across all samples.
countData = countData[rowSums(countData)>1, ]
head(countData)
library(dplyr)
library(DESeq2)
# countDataURL = "d:/ProyectosProgramacion/GSE37704_featurecounts.csv"
countDataURL = "/GSE37704_featurecounts.csv"
# Import countdata
countData = read.csv(countDataURL, row.names=1) %>%
dplyr::select(-length) %>%
as.matrix()
# Filter data where you only have 0 or 1 read count across all samples.
countData = countData[rowSums(countData)>1, ]
head(countData)
library(dplyr)
library(DESeq2)
# countDataURL = "d:/ProyectosProgramacion/GSE37704_featurecounts.csv"
countDataURL = "/GSE37704_featurecounts.csv"
# Import countdata
countData = read.csv(countDataURL, row.names=1) %>%
dplyr::select(-length) %>%
as.matrix()
# Filter data where you only have 0 or 1 read count across all samples.
countData = countData[rowSums(countData)>1, ]
head(countData)
library(dplyr)
library(DESeq2)
# countDataURL = "d:/ProyectosProgramacion/GSE37704_featurecounts.csv"
countDataURL = "/GSE37704_featurecounts.csv"
# Import countdata
countData = read.csv(countDataURL, row.names=1) %>%
dplyr::select(-length) %>%
as.matrix()
# Filter data where you only have 0 or 1 read count across all samples.
countData = countData[rowSums(countData)>1, ]
head(countData)
# Import countdata
countDato = read.csv(countDataURL, row.names=1) %>%
dplyr::select(-length) %>%
as.matrix()
library(dplyr)
library(DESeq2)
# countDataURL = "d:/ProyectosProgramacion/GSE37704_featurecounts.csv"
countDataURL = "/GSE37704_featurecounts.csv"
# Import countdata
countDato = read.csv(countDataURL, row.names=1) %>%
dplyr::select(-length) %>%
as.matrix()
# Filter data where you only have 0 or 1 read count across all samples.
countData = countData[rowSums(countData)>1, ]
head(countData)
# countDataURL = "d:/ProyectosProgramacion/GSE37704_featurecounts.csv"
countDataURL = "/GSE37704_featurecounts.csv"
# Import countdata
countData = read.csv(countDataURL, row.names=1) %>%
dplyr::select(-length) %>%
as.matrix()
library(dplyr)
library(DESeq2)
# countDataURL = "d:/ProyectosProgramacion/GSE37704_featurecounts.csv"
countDataURL = "/GSE37704_featurecounts.csv"
# Import countdata
countData = read.csv(countDataURL, row.names=1) %>%
dplyr::select(-length) %>%
as.matrix()
# Filter data where you only have 0 or 1 read count across all samples.
countData = countData[rowSums(countData)>1, ]
head(countData)
library(dplyr)
library(DESeq2)
# countDataURL = "d:/ProyectosProgramacion/GSE37704_featurecounts.csv"
countDataFile = "/GSE37704_featurecounts.csv"
# Import countdata
countData = read.csv(countDataFile, row.names=1) %>%
dplyr::select(-length) %>%
as.matrix()
# Filter data where you only have 0 or 1 read count across all samples.
countData = countData[rowSums(countData)>1, ]
head(countData)
library(dplyr)
library(DESeq2)
# load the file
countDataFile = "/GSE37704_featurecounts.csv"
# Import countdata
countData = read.csv(countDataFile, row.names=1) %>%
dplyr::select(-length) %>%
as.matrix()
# Filter data where you only have 0 or 1 read count across all samples.
countData = countData[rowSums(countData)>1, ]
head(countData)
# Import metadata
colData = read.csv("/GSE37704_metadata.csv", row.names=1)
colData
library(dplyr)
library(DESeq2)
# load the file
countDataFile = "/GSE37704_featurecounts.csv"
# Import countdata
countData = read.csv(countDataFile, row.names=1) %>%
dplyr::select(-length) %>%
as.matrix()
# Filter data where you only have 0 or 1 read count across all samples.
countData = countData[rowSums(countData)>1, ]
head(countData)
# Import metadata
columnData = read.csv("/GSE37704_metadata.csv", row.names=1)
columnData
library(dplyr)
library(DESeq2)
# load the file
countDataFile = "./GSE37704_featurecounts.csv"
# Import countdata
countData = read.csv(countDataFile, row.names=1) %>%
dplyr::select(-length) %>%
as.matrix()
# Filter data where you only have 0 or 1 read count across all samples.
countData = countData[rowSums(countData)>1, ]
head(countData)
# Import metadata
columnData = read.csv("./GSE37704_metadata.csv", row.names=1)
columnData
library(dplyr)
library(DESeq2)
# load the file
countDataFile = "./GSE37704_featurecounts.csv"
# Import countdata
countData = read.csv(countDataFile, row.names=1) %>%
dplyr::select(-length) %>%
as.matrix()
# Filter data where you only have 0 or 1 read count across all samples.
countData = countData[rowSums(countData)>1, ]
head(countData)
# Import metadata
columnData = read.csv("d:/ProyectosProgramacion/BiologiadeRedesSNC/Tutorial_RNAseq_differential_expression_and_pathway_analysis/GSE37704_metadata.csv", row.names=1)
columnData
library(dplyr)
library(DESeq2)
# load the file
countDataFile = "./GSE37704_featurecounts.csv"
# Import countdata
countData = read.csv(countDataFile, row.names=1) %>%
dplyr::select(-length) %>%
as.matrix()
# Filter data where you only have 0 or 1 read count across all samples.
countData = countData[rowSums(countData)>1, ]
head(countData)
# Import metadata
columnData = read.csv("d:/ProyectosProgramacion/BiologiadeRedesSNC/Tutorial_RNAseq_differential_expression_and_pathway_analysis/GSE37704_metadata.csv", row.names=1)
columnData
# Set up the DESeqDataSet Objetct and run the DESeq pipeline
dds = DESeqDataSetFromMatrix(countData=countData,
columnData=columnData,
design=~condition)
dds = DESeq(dds)
dds
library(dplyr)
library(DESeq2)
# load the file
countDataFile = "./GSE37704_featurecounts.csv"
# Import countdata
countData = read.csv(countDataFile, row.names=1) %>%
dplyr::select(-length) %>%
as.matrix()
# Filter data where you only have 0 or 1 read count across all samples.
countData = countData[rowSums(countData)>1, ]
head(countData)
# Import metadata
colData = read.csv("d:/ProyectosProgramacion/BiologiadeRedesSNC/Tutorial_RNAseq_differential_expression_and_pathway_analysis/GSE37704_metadata.csv", row.names=1)
colData
# Set up the DESeqDataSet Objetct and run the DESeq pipeline
dds = DESeqDataSetFromMatrix(countData=countData,
colData=colData,
design=~condition)
dds = DESeq(dds)
dds
View(colData)
View(columnData)
View(countData)
View(columnData)
View(colData)
library(dplyr)
library(DESeq2)
# load the file
countDataFile = "./GSE37704_featurecounts.csv"
# Import countdata
countData = read.csv(countDataFile, row.names=1) %>%
dplyr::select(-length) %>%
as.matrix()
# Filter data where you only have 0 or 1 read count across all samples.
countData = countData[rowSums(countData)>1, ]
head(countData)
# Import metadata
colData = read.csv("d:/ProyectosProgramacion/BiologiadeRedesSNC/Tutorial_RNAseq_differential_expression_and_pathway_analysis/GSE37704_metadata.csv", row.names=1)
colData
# Set up the DESeqDataSet Objetct and run the DESeq pipeline
dds = DESeqDataSetFromMatrix(countData=countData,
colData=colData,
design=~condition)
dds = DESeq(dds)
dds
res = results(dds, contrast=c("condition", "hoxa1_kd", "control_sirna"))
res = res[order(res$pvalue),]
summary(res)
View(dds)
View(res)
head(countData(dds))
head(counts(dds))
head(counts(dds, normalized=T))
install.packages("AnnotationDbi")
install.packages("AnnotationDbi")
install.packages("AnnotationDbi")
install.packages("AnnotationDbi")
install.packages("AnnotationDbi")
library("AnnotationDbi")
library("AnnotationDbi")
library("org.Hs.eg.db")
install.packages("org.Hs.eg.db")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("org.Hs.eg.db")
library("org.Hs.eg.db")
library("org.Hs.eg.db")
library("AnnotationDbi")
library("org.Hs.eg.db")
columns(org.Hs.eg.db)
# get the Entrez IDs, gene symbols, and full gene names
res$symbol = mapIds(org.Hs.eg.db,
keys=row.names(res),
column="SYMBOL",
keytype="ENSEMBL",
multiVals="first")
res$entrez = mapIds(org.Hs.eg.db,
keys=row.names(res),
column="ENTREZID",
keytype="ENSEMBL",
multiVals="first")
res$name =   mapIds(org.Hs.eg.db,
keys=row.names(res),
column="GENENAME",
keytype="ENSEMBL",
multiVals="first")
head(res, 10)
View(res)
View(dds)
install.packages("pathview")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("pathview")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("gage")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("gageData")
library(pathview)
library(gage)
library(gageData)
data(kegg.sets.hs)
data(sigmet.idx.hs)
kegg.sets.hs = kegg.sets.hs[sigmet.idx.hs]
head(kegg.sets.hs, 3)
foldchanges = res$log2FoldChange
names(foldchanges) = res$entrez
head(foldchanges)
res$log2FoldChange
# get the results
keggres = gage(foldchanges, gsets=kegg.sets.hs, same.dir=TRUE)
# Look at both up (greater), down (less), and statatistics.
lapply(keggres, head)
View(gene.idtype.bods)
View(korg)
# get the upregulated pathways
keggrespathways = data.frame(id=rownames(keggres$greater), keggres$greater) %>%
tbl_df() %>%
filter(row_number()<=5) %>%
.$id %>%
as.character()
keggrespathways
library(dplyr)
# get the upregulated pathways
keggrespathways = data.frame(id=rownames(keggres$greater), keggres$greater) %>%
tbl_df() %>%
filter(row_number()<=5) %>%
.$id %>%
as.character()
keggrespathways
# get the IDs
keggresids = substr(keggrespathways, start=1, stop=8)
keggresids
# Define plotting function for applying later
plot_pathway = function(pid) pathview(gene.data=foldchanges, pathway.id=pid, species="hsa", new.signature=FALSE)
# plot multiple pathways (plots saved to disk and returns a throwaway list object)
tmp = sapply(keggresids, function(pid) pathview(gene.data=foldchanges, pathway.id=pid, species="hsa"))
browseVignettes("DESeq2")
resultsNames(dds)
library("DESeq2")
resultsNames(dds)
summary(res)
library("DESeq2")
summary(res)
res
res$symbol
library("DESeq2")
?results
summary(res)
library("DESeq2")
?gage
library("gage")
?gage
View(keggres)
load("D:/ProyectosProgramacion/BiologiadeRedesSNC/Tutorial_RNAseq_differential_expression_and_pathway_analysis/.RData")
setwd("D:/ProyectosProgramacion/BiologiadeRedesSNC/Tutorial_RNAseq_differential_expression_and_pathway_analysis")
load("D:/ProyectosProgramacion/BiologiadeRedesSNC/Tutorial_RNAseq_differential_expression_and_pathway_analysis/.RData")
load("D:/ProyectosProgramacion/BiologiadeRedesSNC/Tutorial_RNAseq_differential_expression_and_pathway_analysis/.RData")
